"# VIMRC: Sourced from ~/.vimrc
"# Neovim is installed! A copy of the fancy vimrc is in .config/nvim

function Indent()
  let l:view = winsaveview()
  :normal! gg=G
  call winrestview(l:view)
endfunction

set nocompatible
filetype plugin on
filetype indent on
syntax enable
set background=dark
set t_Co=256
colorscheme retrobox

set autochdir
set autoindent
set backspace=indent,eol,start
set nobackup
set completeopt=menuone,preview,popup
set cursorline
set cursorlineopt=number
set expandtab
set hidden
set ignorecase
set laststatus=2
set number
set noruler
set relativenumber
set scrolloff=5
set shiftwidth=4
set showmatch
set smartcase
set smartindent
set statusline=(%n)\ %F\ %h%m%r%=%-15.([%Y]\ \ \ col:\ %c\ [%l:%L]%)\ \ \ %p%%\ \ %P\ \ %f\ |
set noswapfile
set path+=**
set tabstop=4
set textwidth=0
set noundofile
set wildmenu
set wildmode=list:longest,full
set nowrap

call plug#begin('~/.vim/autoload')
Plug 'honza/vim-snippets'
Plug 'SirVer/ultisnips'
Plug 'mattn/emmet-vim'
call plug#end()

let g:user_emmet_mode='inv'
let g:user_emmet_leader_key=','

" let g:netrw_browse_split=4
let g:netrw_banner=0
let g:netrw_altv=1
let g:netrw_liststyle=3
let g:netrw_list_hide=netrw_gitignore#Hide()
let g:netrw_list_hide.=',\(^\|\s\s\)\zs\.\S\+'

let g:UltiSnipsExpandTrigger='<tab>'
let g:UltiSnipsJumpForwardTrigger='<tag>'
let g:UltiSnipsJumpBackwardTrigger='<S-tag>'

let mapleader=" "
let maplocalleader="\\"

inoremap kj <esc>
vnoremap kj <ESC>

command! MakeTags !ctags -R .

nnoremap <leader>w :write<cr>
nnoremap <leader>q ZQ
nnoremap <leader>z ZZ
nnoremap <leader>o :edit .<cr>
nnoremap <leader>f :find 
nnoremap <localleader>e :edit ~/.vimrc<cr>
nnoremap <localleader>ve :vsplit<CR><C-w>l:edit ~/.vimrc<cr>
nnoremap <localleader>s :source ~/.vimrc<cr>:do FileType<cr>:do BufEnter<cr>
nnoremap <leader>t :shell<CR>

nnoremap w W
nnoremap <leader>a zt
nnoremap <S-b> _
nnoremap <S-e> $
nnoremap <S-y> y$
nnoremap n nzz
nnoremap N Nzz
nnoremap ' `
nnoremap '' ``
nnoremap <F8> @
nnoremap <F9> @@
vnoremap J :m '>+1<CR>gv=gv
vnoremap K :m '<-2<CR>gv=gv
vnoremap < <gv
vnoremap > >gv
nnoremap <leader>v :vsplit<cr><C-w>l
nnoremap <leader>s :split<cr><C-w>j
nnoremap <C-l> <C-w>l
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k

nnoremap <leader>rj :vertical resize+5<CR>
nnoremap <leader>rk :resize+5<CR>
nnoremap <leader>rs <C-w>=

nnoremap <leader>bn :bnext<cr>
nnoremap <leader>bp :bpreviouse<cr>

nnoremap <leader>to :tabnew<cr>
nnoremap <leader>tn :tabnext<cr>
nnoremap <leader>tp :tabprev<cr>
nnoremap <leader>tc :tabclose<cr>

augroup ALL
  au!
  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
augroup END

augroup VIM
  au!
  au FileType vim setlocal ts=2 sw=2 sts=2
  au BufWritePre,BufEnter $MYVIMRC,*.vim call Indent()
augroup END

augroup PYTHON
  au!
  au FileType python setlocal fdm=indent fdc=0 fdl=99 fdls=99
  au BufWritePre *.py call Indent()
augroup END

augroup C_CPP
  au!
  au FileType c,cpp setlocal ts=8 sw=8 cc=80 noai nosi noci cin cino=ln,c2 fdc=3 fdm=indent fdl=3 fdls=3
  au BufEnter *.c,*.cpp,*.h nnoremap <buffer> <leader>b A<space>{<cr>}<esc>ko
  au BufWritePre,BufEnter *.c,*.cpp,*.h call Indent()
augroup END

augroup RUST
  au!
  au FileType rust setlocal noai nosi noci cin cino=ln,c2 fdc=3 fdm=indent
  au BufWritePre,BufEnter *.rs call Indent()
augroup END

augroup HTML_CSS
  au!
  au FileType html,css setlocal ts=2 sw=2 cc=80,100,120 fdc=4 fdm=manual fdl=2 fdls=2 aw awa updatetime=2500
  au BufEnter *.html nnoremap <buffer> <localleader>f Vatzf
  au BufRead,BufEnter *.html nnoremap <buffer> <localleader>c i<!----><esc>2hi<space><esc>i<space>
  au BufRead,BufEnter *.css nnoremap <buffer> <localleader>c i/**/<esc>hi<space><esc>i<space>
  au BufRead,BufEnter *.html :onoremap <buffer> it :<c-u>normal! f<vi<<cr>
  au CursorHold *.html,*.css write
  au BufWritePre,BufWinEnter *.html,*.css call Indent()
augroup END

augroup BASH
  au!
  au FileType sh silent setlocal nofen fdc=0 scl=no
  au BufWritePre,BufEnter *.sh call Indent()
augroup END

augroup ABBREVS
  au!
  au FileType python iabbrev exp os.path.expanduser(os.path.join('~',))<left><left>
  au FileType python iabbrev def def():<left><left><left>
augroup END
